// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.0
//   protoc               v3.19.1
// source: account.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";
import { Timestamp } from "./utils.pb";

export const protobufPackage = "btodo.account";

export interface FindAccountRequest {
  accountID: number;
  isDeleted?: boolean | undefined;
}

export interface FindAccountResponse {
  accountID: number;
  email: string;
  isDeleted: boolean;
  createdAt?: Timestamp | undefined;
  updatedAt?: Timestamp | undefined;
}

export interface CreateAccountRequest {
  email: string;
}

export interface CreateAccountResponse {
  accountID: number;
  email: string;
  isDeleted: boolean;
  createdAt?: Timestamp | undefined;
  updatedAt?: Timestamp | undefined;
}

export const BTODO_ACCOUNT_PACKAGE_NAME = "btodo.account";

export interface AccountServiceClient {
  findAccount(request: FindAccountRequest): Observable<FindAccountResponse>;

  createAccount(request: CreateAccountRequest): Observable<CreateAccountResponse>;
}

export interface AccountServiceController {
  findAccount(
    request: FindAccountRequest,
  ): Promise<FindAccountResponse> | Observable<FindAccountResponse> | FindAccountResponse;

  createAccount(
    request: CreateAccountRequest,
  ): Promise<CreateAccountResponse> | Observable<CreateAccountResponse> | CreateAccountResponse;
}

export function AccountServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["findAccount", "createAccount"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("AccountService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("AccountService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const ACCOUNT_SERVICE_NAME = "AccountService";
